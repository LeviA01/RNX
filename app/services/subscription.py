import asyncio
from app.database.repositories.user_repo import UserRepository
from app.database.repositories.server_repo import ServerRepository
from app.database.connection import get_db
from datetime import datetime
from dateutil.relativedelta import relativedelta
from app.services.vpn import VPNService
from aiogram.utils.markdown import hlink

class SubscriptionService:
    def __init__(self):
        self.db = next(get_db())
        self.user_repo = UserRepository(self.db)
        self.server_repo = ServerRepository(self.db)


    async def get_subscription_status(self, telegram_id: int) -> dict:
        user = self.user_repo.get_user(telegram_id)
        if not user or not user.subscription_end:
            return {
                "active": False,
                "expires": None
            }
        
        current_datetime = datetime.utcnow()
        return {
            "active": user.subscription_end > current_datetime,
            "expires": user.subscription_end
        }
    
    async def get_user_by_telegram_id(self, telegram_id: int):
        user = self.user_repo.get_user(telegram_id)
        return user

    async def extend_subscription(self, telegram_id: int, months: int):
        user = self.user_repo.get_user(telegram_id)

        if not user:
             return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        
        current_expiration = user.subscription_end
        new_expiration = current_expiration + relativedelta(months=months)
        self.user_repo.update_subscription(telegram_id, new_expiration)
        await asyncio.to_thread(VPNService.syns_user, user)
        text = f"<b>–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω–∞!</b> üéâ\n\n–¢–µ–ø–µ—Ä—å –æ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ - {new_expiration.strftime('%d-%m-%Y')}.\n\n–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç–µ—Å—å —Å –Ω–∞–º–∏! ‚ù§Ô∏è"
        return text
    
    async def pay_subscription(self, telegram_id: int, months: int):
        user = self.user_repo.get_user(telegram_id)
        if not user:
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –ø–æ–¥–ø–∏—Å–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        
        current_expiration = user.subscription_end if user.subscription_end else datetime.utcnow()
        new_expiration = datetime.combine(current_expiration, datetime.min.time()) + relativedelta(months=months)
        
        user_data = {
            "id": user.id,
            "username": user.username,
            "tgId": user.telegram_id,
            "subscription_end": new_expiration.strftime("%Y-%m-%d")
        }
        
        status, server_id = VPNService.add_vpn_user(user_data)
        
        if status:
            user.subscription_end = new_expiration
            user.server_id = server_id
            user.status = 'active'
            self.db.commit()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            self.server_repo.update_server_users(server_id)
            
            await asyncio.to_thread(VPNService.syns_user, user)
            url = f"https://ronix-red.ru/{user.id}"
            
            return f"<b>–í–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! üéâ</b>\n\nüîó –ù–∞–∂–º–∏ –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥ –≤ Hiddify:\n\n<a href='{url}'>–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è</a>"
        
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É."

    async def add_user(self, telegram_id: int, username: str | None):
        return self.user_repo.add_user(telegram_id, username)

    async def check_free_server(self):
        return self.server_repo.get_free_server()
    
    async def get_configuration(self, telegram_id: int):
        user = self.user_repo.get_user(telegram_id)
        if not user:
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        url = f"https://ronix-red.ru/api/user-data.php?userId={user.id}"
        text = f"<b>–í–æ—Ç –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è üòé</b>\n\nüîó –ù–∞–∂–º–∏ –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥ –≤ Hiddify:\n\n{url}\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ—ë –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."

        return text